{"version":3,"sources":["components/1atomic/MainBlock1Card/index.js","resources/utilities.js","components/1atomic/MainBlock2StatsText/index.js","components/1atomic/MainBlock3HeaderText/index.js","components/1atomic/MainBlock2Divider/index.js","components/2modular/MainBlock1OverviewStats/index.js","components/1atomic/MainBlock4CountdownTimer/index.js","components/2modular/MainBlock2OutstandingStats/icon.js","components/2modular/MainBlock2OutstandingStats/index.js","components/4pages/AccountPage/index.js"],"names":["BoxStyle","background","borderRadius","border","justifyContent","m","MainBlock1Card","props","sx","flexDirection","children","prettifytolocalstring","amount","toLocaleString","prettifyamounts","prettifyGrowthPercentage","direction","value","MainBlock2StatsText","title","valueColor","align","growthDirection","percentageValue","tooltipLabel","alignResponsive","flex","variant","textAlign","color","as","hasArrow","label","bg","ml","fontSize","MainBlock3HeaderText","text","fontWeight","mt","mb","MainBlock2Divider","w","height","alignSelf","orientation","useBreakpointValue","connect","state","stats","minHeight","p","scepterCirculatingSupply","scepterBackingPrice","airdrops3Months","scepterTreasuryValue","riskTreasuryValue","batonTreasuryValue","MainBlock4CountdownTimer","timeleft","time","difference","Date","days","Math","floor","hours","minutes","seconds","calculateTimeLeft","timeUNIX","useState","day","setDay","hour","setHour","setMinutes","setSeconds","useEffect","myInterval","setInterval","clearInterval","opacity","IconBottomRightArrow","width","viewBox","fill","xmlns","d","stroke","localwalletstats","useDisclosure","defaultIsOpen","isAlertVisible","isOpen","onClose","colorScheme","boxShadow","h","maxWidth","size","mr","_hover","onClick","icon","remainingSwapTime","amountOfSptrSwapped","sptrSellPriceAtSwap","investmentList","flexGrow","sceptertoken","v","batontoken"],"mappings":"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","file":"static/js/6.1cf99c8d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nconst BoxStyle = {\r\n  background:\r\n    \"radial-gradient(90.16% 143.01% at 15.32% 21.04%, rgba(165, 239, 255, 0.2) 0%, rgba(110, 191, 244, 0.0447917) 77.08%, rgba(70, 144, 213, 0) 100%)\",\r\n  borderRadius: 5,\r\n  border: \"1px solid rgba(165, 239, 255, 0.2)\",\r\n  justifyContent: \"space-around\",\r\n  m: \"7px\",\r\n};\r\n\r\nconst MainBlock1Card = (props) => {\r\n  return (\r\n    <Flex sx={BoxStyle} flexDirection={[\"column\", \"column\", \"row\"]} {...props}>\r\n      {props.children}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MainBlock1Card;\r\n","export function convertSlugToUrl(slug, parameters) {\r\n  let url = slug;\r\n  Object.entries(parameters).forEach(([key, value]) => {\r\n    url = url.replace(`:${key}`, value);\r\n  });\r\n  return url;\r\n}\r\n\r\nexport function prettifytolocalstring(amount) {\r\n  return amount ? amount.toLocaleString(): 'NULL';\r\n}\r\n\r\nexport function prettifyamounts(amount) {\r\n  return amount ? \"$\" + prettifytolocalstring(amount) : \"NULL\";\r\n}\r\n\r\nexport function prettifyGrowthPercentage(direction, value) {\r\n  if (direction === \"positive\") {\r\n    return \"+\" + value + \"%\";\r\n  } else if (direction === \"negative\") {\r\n    return \"-\" + value + \"%\";\r\n  } else {\r\n    return \"Nan\";\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Box, Text, Tooltip } from '@chakra-ui/react';\r\nimport { InfoOutlineIcon } from '@chakra-ui/icons';\r\nimport { prettifyGrowthPercentage } from 'resources/utilities';\r\n\r\nconst MainBlock2StatsText = (props) => {\r\n    const { title, value, valueColor, align, growthDirection, percentageValue, tooltipLabel } = props;\r\n\r\n  // const alignResponsive = useBreakpointValue([\"left\", \"left\", \"center\"]);\r\n  const alignResponsive = 'center';\r\n  \r\n  return (\r\n    <Box flex={1}>\r\n      <Text variant=\"title\" textAlign={align ? align : alignResponsive}>\r\n        {title}\r\n      </Text>\r\n      <Text variant=\"value\" color={valueColor} textAlign={align ? align : alignResponsive}>\r\n        {value}\r\n        {growthDirection && percentageValue && (\r\n          <Text\r\n            as=\"sup\"\r\n            variant={\r\n              growthDirection === 'positive'\r\n                ? 'positiveGrowth'\r\n                : 'negativeGrowth'\r\n            }\r\n          >\r\n            {prettifyGrowthPercentage(growthDirection, percentageValue)}\r\n          </Text>\r\n        )}\r\n        {tooltipLabel && (\r\n          <Tooltip hasArrow label={tooltipLabel} bg=\"wandGreen\" color=\"black\">\r\n            <InfoOutlineIcon\r\n              color=\"wandGreen\"\r\n              sx={{ ml: '5px', fontSize: 'sm' }}\r\n            />\r\n          </Tooltip>\r\n        )}\r\n      </Text>\r\n    </Box>\r\n  )\r\n};\r\n \r\nexport default MainBlock2StatsText;","import React from \"react\";\r\n\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst MainBlock3HeaderText = (props) => {\r\n  const { text } = props;\r\n  return (\r\n    <Text fontSize=\"26px\" fontWeight={700} m=\"7px\" mt=\"28px\" mb=\"28px\" {...props}>\r\n      {text}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default MainBlock3HeaderText;\r\n","import React from \"react\";\r\n\r\nimport { Center, Divider, useBreakpointValue } from \"@chakra-ui/react\";\r\n\r\nconst MainBlock2Divider = () => {\r\n  return (\r\n    <Center\r\n      w={[\"150px\", \"150px\", \"5px\"]}\r\n      height={[\"21px\", \"21px\", \"50px\"]}\r\n      alignSelf=\"center\"\r\n    >\r\n      <Divider\r\n        orientation={useBreakpointValue([\r\n          \"horizontal\",\r\n          \"horizontal\",\r\n          \"vertical\",\r\n        ])}\r\n      />\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default MainBlock2Divider;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MainBlock1Card from 'components/1atomic/MainBlock1Card';\r\nimport MainBlock2StatsText from 'components/1atomic/MainBlock2StatsText';\r\nimport { Flex } from '@chakra-ui/react';\r\n\r\nimport { prettifytolocalstring, prettifyamounts } from \"resources/utilities\";\r\n\r\nconst MainBlock1OverviewStats = (props) => {\r\n  const { stats } = props;\r\n\r\n    return (\r\n      <MainBlock1Card minHeight=\"172px\" p=\"15px\" flexDirection=\"column\">\r\n        <Flex flexDirection={[\"column\", \"column\", \"row\"]}>\r\n          <MainBlock2StatsText\r\n            title=\"Circulating Supply ($SCEPTER)\"\r\n            value={prettifytolocalstring(stats.scepterCirculatingSupply)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"$SCEPTER Price\"\r\n            value={prettifyamounts(stats.scepterBackingPrice)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"Airdrops distributed (last 3 months)\"\r\n            value={prettifyamounts(stats.airdrops3Months)}\r\n          />\r\n        </Flex>\r\n        <Flex flexDirection={[\"column\", \"column\", \"row\"]}>\r\n          <MainBlock2StatsText\r\n            title=\"$SCEPTER Treasury Value\"\r\n            value={prettifyamounts(stats.scepterTreasuryValue)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"Risk Treasury Value\"\r\n            value={prettifyamounts(stats.riskTreasuryValue)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"Baton treasury value\"\r\n            value={prettifyamounts(stats.batonTreasuryValue)}\r\n          />\r\n        </Flex>\r\n      </MainBlock1Card>\r\n    );\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stats: state.stats[0]\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(MainBlock1OverviewStats);","import React, { useState, useEffect } from \"react\";\r\nimport { Text, Box } from \"@chakra-ui/react\";\r\nimport MainBlock2StatsText from \"../MainBlock2StatsText\";\r\n\r\nconst calculateTimeLeft = (time) => {\r\n  const difference = +new Date(time) - +new Date();\r\n  let timeLeft = {};\r\n\r\n  if (difference > 0) {\r\n    timeLeft = {\r\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n      minutes: Math.floor((difference / 1000 / 60) % 60),\r\n      seconds: Math.floor((difference / 1000) % 60),\r\n    };\r\n  } else {\r\n    timeLeft = {\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n    };\r\n  }\r\n\r\n  return timeLeft;\r\n};\r\n\r\nconst MainBlock4CountdownTimer = (props) => {\r\n  const { title, timeUNIX } = props;\r\n  var timeleft = calculateTimeLeft(timeUNIX * 1000);\r\n\r\n  //   console.log(timeleft);\r\n\r\n  const [day, setDay] = useState(timeleft.days);\r\n  const [hour, setHour] = useState(timeleft.hours);\r\n  const [minutes, setMinutes] = useState(timeleft.minutes);\r\n  const [seconds, setSeconds] = useState(timeleft.seconds);\r\n\r\n  useEffect(() => {\r\n    let myInterval = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      } else {\r\n        if (minutes > 0) {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        } else {\r\n          if (hour > 0) {\r\n            setHour(hour - 1);\r\n            setMinutes(59);\r\n          } else {\r\n            if (day > 0) {\r\n              setDay(day - 1);\r\n              setHour(24);\r\n            } else {\r\n              clearInterval(myInterval);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(myInterval);\r\n    };\r\n  });\r\n  return day === 0 && hour === 0 && minutes === 0 && seconds === 0 ? (\r\n    <MainBlock2StatsText title={title} value=\"Nan\" />\r\n  ) : (\r\n    <>\r\n      <Box flex={1} mb=\"10px\" textAlign=\"center\">\r\n        <Text variant=\"title\">{title}</Text>\r\n        <Text as='span' variant=\"value\">\r\n          {`${day < 10 ? `0${day}` : day}:${hour < 10 ? `0${hour}` : hour}:${\r\n            minutes < 10 ? `0${minutes}` : minutes\r\n              }:${seconds < 10 ? `0${seconds}` : seconds}`}\r\n          <Box mt='-15px'>\r\n            <Text\r\n              as=\"sup\"\r\n              fontSize=\"6\"\r\n              fontWeight={700}\r\n              opacity={0.8}\r\n              ml={\"5px\"}\r\n            >\r\n              DAYS\r\n            </Text>\r\n            <Text\r\n              as=\"sup\"\r\n              fontSize=\"6\"\r\n              fontWeight={700}\r\n              opacity={0.8}\r\n              ml={\"18px\"}\r\n            >\r\n              HOURS\r\n            </Text>\r\n            <Text\r\n              as=\"sup\"\r\n              fontSize=\"6\"\r\n              fontWeight={700}\r\n              opacity={0.8}\r\n              ml={\"10px\"}\r\n            >\r\n              MINUTES\r\n            </Text>\r\n            <Text\r\n              as=\"sup\"\r\n              fontSize=\"6\"\r\n              fontWeight={700}\r\n              opacity={0.8}\r\n              ml={\"10px\"}\r\n            >\r\n              SECONDS\r\n            </Text>\r\n          </Box>\r\n        </Text>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainBlock4CountdownTimer;\r\n","import React from \"react\";\r\n\r\nconst IconBottomRightArrow = (props) => (\r\n  <svg\r\n    width=\"11\"\r\n    height=\"11\"\r\n    viewBox=\"0 0 11 11\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M1 1L10 10M10 10V1M10 10H1\" stroke={props.fill} />\r\n  </svg>\r\n);\r\n\r\nexport default IconBottomRightArrow;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  useDisclosure,\r\n  Text,\r\n  IconButton,\r\n  Icon,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { CloseIcon } from \"@chakra-ui/icons\";\r\nimport MainBlock1Card from \"components/1atomic/MainBlock1Card\";\r\nimport MainBlock2StatsText from \"components/1atomic/MainBlock2StatsText\";\r\nimport MainBlock4CountdownTimer from \"components/1atomic/MainBlock4CountdownTimer\";\r\n\r\nimport { prettifytolocalstring, prettifyamounts } from \"resources/utilities\";\r\nimport IconBottomRightArrow from \"./icon\";\r\n\r\nconst MainBlock2OutstandingStats = (props) => {\r\n  const { localwalletstats } = props;\r\n\r\n  const {\r\n    isOpen: isAlertVisible,\r\n    onClose,\r\n  } = useDisclosure({\r\n    defaultIsOpen: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isAlertVisible && (\r\n        <Alert\r\n          colorScheme=\"\"\r\n          bg=\"linear-gradient(136.67deg, #FF409A 8.34%, #C438EF 95.26%);\"\r\n          opacity={0.9}\r\n          boxShadow=\"0px 1.92982px 14.9561px #BA1358;\"\r\n          h=\"42px\"\r\n          maxWidth={['90%', '330px', '330px']}\r\n          borderRadius=\"5px\"\r\n          m=\"7px\"\r\n          mb=\"13px\"\r\n        >\r\n          <AlertTitle>\r\n            <Text fontSize=\"14px\" fontWeight={400}>\r\n              Your outstanding locked amount\r\n              <Icon viewBox=\"0 0 12 12\" ml={['15px', '15px', '20px']}>\r\n                <IconBottomRightArrow fill=\"white\" />\r\n              </Icon>\r\n            </Text>\r\n          </AlertTitle>\r\n          <IconButton\r\n            size=\"xs\"\r\n            borderRadius=\"25px\"\r\n            fontSize=\"10px\"\r\n            bg=\"black\"\r\n            ml=\"auto\"\r\n            mr={['-10px', '-10px', '5px']}\r\n            _hover={{\r\n              background: 'black',\r\n              color: 'white',\r\n            }}\r\n            onClick={onClose}\r\n            icon={<CloseIcon />}\r\n          />\r\n        </Alert>\r\n      )}\r\n\r\n      <MainBlock1Card p=\"15px\">\r\n        <MainBlock4CountdownTimer\r\n          title=\"Remaining days left for swap conclusion\"\r\n          timeUNIX={localwalletstats.remainingSwapTime}\r\n        />\r\n        <MainBlock2StatsText\r\n          title=\"Amount of SCEPTER Swapped\"\r\n          value={prettifytolocalstring(localwalletstats.amountOfSptrSwapped)}\r\n        />\r\n        <MainBlock2StatsText\r\n          title=\"SCEPTER Sell Price at swap (USD)\"\r\n          value={prettifyamounts(localwalletstats.sptrSellPriceAtSwap)}\r\n        />\r\n      </MainBlock1Card>\r\n      <Box h=\"30px\" /* Only for spacing*/ />\r\n    </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    localwalletstats: state.localwalletstats[0]\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(MainBlock2OutstandingStats);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { Flex, Box } from '@chakra-ui/react'\r\nimport MainBlock1Card from 'components/1atomic/MainBlock1Card'\r\nimport { prettifytolocalstring, prettifyamounts } from 'resources/utilities'\r\nimport MainBlock2Divider from 'components/1atomic/MainBlock2Divider'\r\nimport MainBlock2OutstandingStats from 'components/2modular/MainBlock2OutstandingStats'\r\nimport MainBlock1OverviewStats from 'components/2modular/MainBlock1OverviewStats'\r\nimport MainBlock2StatsText from 'components/1atomic/MainBlock2StatsText'\r\nimport MainBlock3HeaderText from 'components/1atomic/MainBlock3HeaderText'\r\n\r\nconst AccountPage = (props) => {\r\n  const { stats, localwalletstats } = props\r\n  return (\r\n    <>\r\n      <Flex\r\n        justifyContent=\"space-between\"\r\n        m={0}\r\n        p={0}\r\n        flexDirection={['column', 'column', 'row']}\r\n      >\r\n        <Flex flexDirection=\"column\" flexGrow={1}>\r\n          <MainBlock3HeaderText\r\n            text=\"SCEPTER\"\r\n            mb=\"5px\"\r\n            fontSize=\"20px\"\r\n            color=\"wandGrey\"\r\n          />\r\n          <MainBlock1Card p=\"25px\" minHeight=\"111px\" flexGrow={1}>\r\n            <MainBlock2StatsText\r\n              title=\"Amount of SCEPTER\"\r\n              value={prettifytolocalstring(localwalletstats.sceptertoken)}\r\n            />\r\n            <MainBlock2Divider />\r\n            <MainBlock2StatsText\r\n              title=\"Current Price\"\r\n              value={prettifyamounts(stats.scepterBackingPrice)}\r\n              tooltipLabel={`Current Value: ${prettifyamounts(\r\n                localwalletstats.sceptertoken * stats.scepterBackingPrice\r\n              )}`}\r\n            />\r\n          </MainBlock1Card>\r\n        </Flex>\r\n        <Flex flexDirection=\"column\" flexGrow={1}>\r\n          <MainBlock3HeaderText\r\n            text=\"BATON/ Airdrops\"\r\n            mb=\"5px\"\r\n            fontSize=\"20px\"\r\n            color=\"wandGrey\"\r\n          />\r\n          <MainBlock1Card p=\"25px\" minHeight=\"111px\" flexGrow={1}>\r\n            <MainBlock2StatsText\r\n              title=\"Amount of BATON\"\r\n              v\r\n              value={prettifytolocalstring(localwalletstats.batontoken)}\r\n            />\r\n            <MainBlock2Divider />\r\n            <MainBlock2StatsText\r\n              title=\"Last Airdrop\"\r\n              value={prettifyamounts(stats.scepterBackingPrice)}\r\n              tooltipLabel={`Total (since start): ${prettifyamounts(\r\n                localwalletstats.sceptertoken * stats.scepterBackingPrice\r\n              )}`}\r\n            />\r\n          </MainBlock1Card>\r\n        </Flex>\r\n      </Flex>\r\n      <MainBlock2OutstandingStats />\r\n      <MainBlock1OverviewStats />\r\n      <Box h=\"70px\" /* Only for spacing*/ />\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stats: state.stats[0],\r\n    investmentList: state.investmentList[0],\r\n    localwalletstats: state.localwalletstats[0],\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(AccountPage)\r\n"],"sourceRoot":""}