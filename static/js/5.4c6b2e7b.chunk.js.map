{"version":3,"sources":["components/1atomic/MainBlock4CountdownTimer/index.js","components/2modular/MainBlock2OutstandingStats/icon.js","components/2modular/MainBlock2OutstandingStats/index.js","components/2modular/MainBlock1OverviewStats/index.js","components/4pages/AccountPage/index.js"],"names":["MainBlock4CountdownTimer","props","title","timeleft","time","difference","Date","days","Math","floor","hours","minutes","seconds","calculateTimeLeft","timeUNIX","useState","day","setDay","hour","setHour","setMinutes","setSeconds","useEffect","myInterval","setInterval","clearInterval","MainBlock2StatsText","value","flex","mb","variant","label","as","fontSize","fontWeight","opacity","ml","placement","bg","mt","isOpen","IconBottomRightArrow","width","height","viewBox","fill","xmlns","d","stroke","connect","state","stats","investmentList","localwalletstats","useDisclosure","defaultIsOpen","isAlertVisible","onClose","onOpen","colorScheme","boxShadow","h","maxWidth","borderRadius","m","size","mr","_hover","background","color","onClick","icon","MainBlock1Card","p","remainingSwapTime","prettifytolocalstring","amountOfSptrSwapped","SptrSellPrice","minHeight","flexDirection","scepterCirculatingSupply","scepterBackingPrice","airdrops3Months","scepterTreasuryValue","riskTreasuryValue","batonTreasuryValue","AccountPage"],"mappings":"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","file":"static/js/5.4c6b2e7b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Text, Box, Tooltip } from \"@chakra-ui/react\";\r\nimport MainBlock2StatsText from \"../MainBlock2StatsText\";\r\n\r\nconst calculateTimeLeft = (time) => {\r\n  const difference = +new Date(time) - +new Date();\r\n  let timeLeft = {};\r\n\r\n  if (difference > 0) {\r\n    timeLeft = {\r\n      days: Math.floor(difference / (1000 * 60 * 60 * 24)),\r\n      hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\r\n      minutes: Math.floor((difference / 1000 / 60) % 60),\r\n      seconds: Math.floor((difference / 1000) % 60),\r\n    };\r\n  } else {\r\n    timeLeft = {\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0,\r\n    };\r\n  }\r\n\r\n  return timeLeft;\r\n};\r\n\r\nconst MainBlock4CountdownTimer = (props) => {\r\n  const { title, timeUNIX } = props;\r\n  var timeleft = calculateTimeLeft(timeUNIX * 1000);\r\n\r\n  //   console.log(timeleft);\r\n\r\n  const [day, setDay] = useState(timeleft.days);\r\n  const [hour, setHour] = useState(timeleft.hours);\r\n  const [minutes, setMinutes] = useState(timeleft.minutes);\r\n  const [seconds, setSeconds] = useState(timeleft.seconds);\r\n\r\n  useEffect(() => {\r\n    let myInterval = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      } else {\r\n        if (minutes > 0) {\r\n          setMinutes(minutes - 1);\r\n          setSeconds(59);\r\n        } else {\r\n          if (hour > 0) {\r\n            setHour(hour - 1);\r\n            setMinutes(59);\r\n          } else {\r\n            if (day > 0) {\r\n              setDay(day - 1);\r\n              setHour(24);\r\n            } else {\r\n              clearInterval(myInterval);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }, 1000);\r\n    return () => {\r\n      clearInterval(myInterval);\r\n    };\r\n  });\r\n  return day === 0 && hour === 0 && minutes === 0 && seconds === 0 ? (\r\n    <MainBlock2StatsText\r\n      title={title}\r\n      value=\"Nan\"\r\n    />\r\n  ) : (\r\n    <>\r\n      <Box flex={1} mb=\"10px\">\r\n          <Text variant=\"title\">{title}</Text>\r\n        <Tooltip\r\n          label={\r\n            <>\r\n              <Text\r\n                as=\"sup\"\r\n                fontSize=\"6\"\r\n                fontWeight={700}\r\n                opacity={0.8}\r\n                ml={\"5px\"}\r\n              >\r\n                DAYS\r\n              </Text>\r\n              <Text\r\n                as=\"sup\"\r\n                fontSize=\"6\"\r\n                fontWeight={700}\r\n                opacity={0.8}\r\n                ml={\"18px\"}\r\n              >\r\n                HOURS\r\n              </Text>\r\n              <Text\r\n                as=\"sup\"\r\n                fontSize=\"6\"\r\n                fontWeight={700}\r\n                opacity={0.8}\r\n                ml={\"10px\"}\r\n              >\r\n                MINUTES\r\n              </Text>\r\n              <Text\r\n                as=\"sup\"\r\n                fontSize=\"6\"\r\n                fontWeight={700}\r\n                opacity={0.8}\r\n                ml={\"10px\"}\r\n              >\r\n                SECONDS\r\n              </Text>\r\n            </>\r\n          }\r\n          placement=\"bottom\"\r\n          bg=\"transparent\"\r\n          mt={\"-15px\"}\r\n          isOpen\r\n        >\r\n          <Text variant=\"value\">{`${day < 10 ? `0${day}` : day}:${\r\n            hour < 10 ? `0${hour}` : hour\r\n          }:${minutes < 10 ? `0${minutes}` : minutes}:${\r\n            seconds < 10 ? `0${seconds}` : seconds\r\n          }`}</Text>\r\n        </Tooltip>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainBlock4CountdownTimer;\r\n","import React from \"react\";\r\n\r\nconst IconBottomRightArrow = (props) => (\r\n  <svg\r\n    width=\"11\"\r\n    height=\"11\"\r\n    viewBox=\"0 0 11 11\"\r\n    fill=\"none\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n  >\r\n    <path d=\"M1 1L10 10M10 10V1M10 10H1\" stroke={props.fill} />\r\n  </svg>\r\n);\r\n\r\nexport default IconBottomRightArrow;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  Alert,\r\n  AlertTitle,\r\n  useDisclosure,\r\n  Text,\r\n  IconButton,\r\n  Icon,\r\n  Box,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { CloseIcon } from \"@chakra-ui/icons\";\r\nimport MainBlock1Card from \"components/1atomic/MainBlock1Card\";\r\nimport MainBlock2StatsText from \"components/1atomic/MainBlock2StatsText\";\r\nimport MainBlock4CountdownTimer from \"components/1atomic/MainBlock4CountdownTimer\";\r\n\r\nimport { prettifytolocalstring } from \"resources/utilities\";\r\nimport IconBottomRightArrow from \"./icon\";\r\n\r\nconst MainBlock2OutstandingStats = (props) => {\r\n  const { stats, investmentList, localwalletstats } = props;\r\n\r\n  const {\r\n    isOpen: isAlertVisible,\r\n    onClose,\r\n    onOpen,\r\n  } = useDisclosure({\r\n    defaultIsOpen: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isAlertVisible && (\r\n        <Alert\r\n          colorScheme=\"\"\r\n          bg=\"linear-gradient(136.67deg, #FF409A 8.34%, #C438EF 95.26%);\"\r\n          opacity={0.9}\r\n          boxShadow=\"0px 1.92982px 14.9561px #BA1358;\"\r\n          h=\"42px\"\r\n          maxWidth={[\"90%\", \"90%\", \"330px\"]}\r\n          borderRadius=\"5px\"\r\n          m=\"7px\"\r\n          mb=\"13px\"\r\n        >\r\n          <AlertTitle>\r\n            <Text fontSize=\"14px\" fontWeight={400}>\r\n              Your outstanding locked amount\r\n              <Icon viewBox=\"0 0 12 12\" ml={[\"15px\", \"15px\", \"20px\"]}>\r\n                <IconBottomRightArrow fill=\"white\" />\r\n              </Icon>\r\n            </Text>\r\n          </AlertTitle>\r\n          <IconButton\r\n            size=\"xs\"\r\n            borderRadius=\"25px\"\r\n            fontSize=\"10px\"\r\n            bg=\"black\"\r\n            ml=\"auto\"\r\n            mr={[\"-10px\", \"-10px\", \"5px\"]}\r\n            _hover={{\r\n              background: \"black\",\r\n              color: \"white\",\r\n            }}\r\n            onClick={onClose}\r\n            icon={<CloseIcon />}\r\n          />\r\n        </Alert>\r\n      )}\r\n\r\n      <MainBlock1Card p=\"15px\">\r\n        <MainBlock4CountdownTimer\r\n          title=\"Remaining days left for swap conclusion\"\r\n          timeUNIX={localwalletstats.remainingSwapTime}\r\n        />\r\n        <MainBlock2StatsText\r\n          title=\"Amount of SCEPTER Swapped\"\r\n          value={prettifytolocalstring(localwalletstats.amountOfSptrSwapped)}\r\n        />\r\n        <MainBlock2StatsText\r\n          title=\"SCEPTER Sell Price at swap (USD)\"\r\n          value={prettifytolocalstring(localwalletstats.SptrSellPrice)}\r\n        />\r\n      </MainBlock1Card>\r\n      <Box h=\"30px\" /* Only for spacing*/ />\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stats: state.stats[0],\r\n    investmentList: state.investmentList[0],\r\n    localwalletstats: state.localwalletstats[0],\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(MainBlock2OutstandingStats);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MainBlock1Card from 'components/1atomic/MainBlock1Card';\r\nimport MainBlock2StatsText from 'components/1atomic/MainBlock2StatsText';\r\nimport { Flex } from '@chakra-ui/react';\r\n\r\nimport { prettifytolocalstring } from 'resources/utilities';\r\n\r\nconst MainBlock1OverviewStats = (props) => {\r\n  const { stats, localwalletstats } = props;\r\n\r\n    return (\r\n      <MainBlock1Card minHeight=\"172px\" p='15px' flexDirection=\"column\">\r\n        <Flex flexDirection={[\"column\", \"column\", \"row\"]}>\r\n          <MainBlock2StatsText\r\n            title=\"Circulating Supply ($SCEPTER)\"\r\n            value={prettifytolocalstring(stats.scepterCirculatingSupply)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"$SCEPTER Price\"\r\n            value={prettifytolocalstring(stats.scepterBackingPrice)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"Airdrops distributed (last 3 months)\"\r\n            value={prettifytolocalstring(stats.airdrops3Months)}\r\n          />\r\n        </Flex>\r\n        <Flex flexDirection={[\"column\", \"column\", \"row\"]}>\r\n          <MainBlock2StatsText\r\n            title=\"$SCEPTER Treasury Value\"\r\n            value={prettifytolocalstring(stats.scepterTreasuryValue)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"Risk Treasury Value\"\r\n            value={prettifytolocalstring(stats.riskTreasuryValue)}\r\n          />\r\n          <MainBlock2StatsText\r\n            title=\"Baton treasury value\"\r\n            value={prettifytolocalstring(stats.batonTreasuryValue)}\r\n          />\r\n        </Flex>\r\n      </MainBlock1Card>\r\n    );\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stats: state.stats[0],\r\n    investmentList: state.investmentList[0],\r\n    localwalletstats: state.localwalletstats[0],\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(MainBlock1OverviewStats);","import React from \"react\";\r\n\r\nimport {\r\n  Grid,\r\n  GridItem,\r\n  Wrap,\r\n  WrapItem,\r\n  Center,\r\n  Box,\r\n  Image,\r\n  Link,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport MainBlock2OutstandingStats from \"components/2modular/MainBlock2OutstandingStats\";\r\nimport MainBlock1OverviewStats from \"components/2modular/MainBlock1OverviewStats\";\r\n\r\nconst AccountPage = () => {\r\n  return (\r\n    <>\r\n      <MainBlock2OutstandingStats />\r\n      <MainBlock1OverviewStats />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n"],"sourceRoot":""}