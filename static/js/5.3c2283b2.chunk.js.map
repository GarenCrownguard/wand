{"version":3,"sources":["components/1atomic/MainBlock1Card/index.js","resources/utilities.js","components/1atomic/MainBlock2StatsText/index.js","components/1atomic/MainBlock3HeaderText/index.js","components/1atomic/MainBlock2Divider/index.js","components/1atomic/Graphs/GraphEvolutionOfTreasuriesStacked.js","components/1atomic/Graphs/GraphTreasuryAllocationDonut.js","components/4pages/DashboardPage/index.js"],"names":["BoxStyle","background","borderRadius","border","justifyContent","m","MainBlock1Card","props","sx","flexDirection","children","prettifytolocalstring","amount","toLocaleString","prettifyamounts","prettifyGrowthPercentage","direction","value","MainBlock2StatsText","title","valueColor","align","growthDirection","percentageValue","tooltipLabel","alignResponsive","flex","variant","textAlign","color","as","hasArrow","label","bg","ml","fontSize","MainBlock3HeaderText","text","fontWeight","mt","mb","MainBlock2Divider","w","height","alignSelf","orientation","useBreakpointValue","GraphEvolutionOfTreasuriesStacked","minHeight","flexGrow","GraphTreasuryAllocationDonut","minWidth","connect","state","stats","investmentList","localwalletstats","p","width","scepterCirculatingSupply","scepterBackingPrice","scepterTreasuryValue","riskTreasuryValue","airdrops3Months","batonTreasuryValue","sceptertoken","batontoken","h"],"mappings":"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","file":"static/js/5.3c2283b2.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\nconst BoxStyle = {\r\n  background:\r\n    \"radial-gradient(90.16% 143.01% at 15.32% 21.04%, rgba(165, 239, 255, 0.2) 0%, rgba(110, 191, 244, 0.0447917) 77.08%, rgba(70, 144, 213, 0) 100%)\",\r\n  borderRadius: 5,\r\n  border: \"1px solid rgba(165, 239, 255, 0.2)\",\r\n  justifyContent: \"space-around\",\r\n  m: \"7px\",\r\n};\r\n\r\nconst MainBlock1Card = (props) => {\r\n  return (\r\n    <Flex sx={BoxStyle} flexDirection={[\"column\", \"column\", \"row\"]} {...props}>\r\n      {props.children}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default MainBlock1Card;\r\n","export function convertSlugToUrl(slug, parameters) {\r\n  let url = slug;\r\n  Object.entries(parameters).forEach(([key, value]) => {\r\n    url = url.replace(`:${key}`, value);\r\n  });\r\n  return url;\r\n}\r\n\r\nexport function prettifytolocalstring(amount) {\r\n  return amount ? amount.toLocaleString(): 'NULL';\r\n}\r\n\r\nexport function prettifyamounts(amount) {\r\n  return amount ? \"$\" + prettifytolocalstring(amount) : \"NULL\";\r\n}\r\n\r\nexport function prettifyGrowthPercentage(direction, value) {\r\n  if (direction === \"positive\") {\r\n    return \"+\" + value + \"%\";\r\n  } else if (direction === \"negative\") {\r\n    return \"-\" + value + \"%\";\r\n  } else {\r\n    return \"Nan\";\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Box, Text, Tooltip } from '@chakra-ui/react';\r\nimport { InfoOutlineIcon } from '@chakra-ui/icons';\r\nimport { prettifyGrowthPercentage } from 'resources/utilities';\r\n\r\nconst MainBlock2StatsText = (props) => {\r\n    const { title, value, valueColor, align, growthDirection, percentageValue, tooltipLabel } = props;\r\n\r\n  // const alignResponsive = useBreakpointValue([\"left\", \"left\", \"center\"]);\r\n  const alignResponsive = 'center';\r\n  \r\n  return (\r\n    <Box flex={1}>\r\n      <Text variant=\"title\" textAlign={align ? align : alignResponsive}>\r\n        {title}\r\n      </Text>\r\n      <Text variant=\"value\" color={valueColor} textAlign={align ? align : alignResponsive}>\r\n        {value}\r\n        {growthDirection && percentageValue && (\r\n          <Text\r\n            as=\"sup\"\r\n            variant={\r\n              growthDirection === 'positive'\r\n                ? 'positiveGrowth'\r\n                : 'negativeGrowth'\r\n            }\r\n          >\r\n            {prettifyGrowthPercentage(growthDirection, percentageValue)}\r\n          </Text>\r\n        )}\r\n        {tooltipLabel && (\r\n          <Tooltip hasArrow label={tooltipLabel} bg=\"wandGreen\" color=\"black\">\r\n            <InfoOutlineIcon\r\n              color=\"wandGreen\"\r\n              sx={{ ml: '5px', fontSize: 'sm' }}\r\n            />\r\n          </Tooltip>\r\n        )}\r\n      </Text>\r\n    </Box>\r\n  )\r\n};\r\n \r\nexport default MainBlock2StatsText;","import React from \"react\";\r\n\r\nimport { Text } from \"@chakra-ui/react\";\r\n\r\nconst MainBlock3HeaderText = (props) => {\r\n  const { text } = props;\r\n  return (\r\n    <Text fontSize=\"26px\" fontWeight={700} m=\"7px\" mt=\"28px\" mb=\"28px\" {...props}>\r\n      {text}\r\n    </Text>\r\n  );\r\n};\r\n\r\nexport default MainBlock3HeaderText;\r\n","import React from \"react\";\r\n\r\nimport { Center, Divider, useBreakpointValue } from \"@chakra-ui/react\";\r\n\r\nconst MainBlock2Divider = () => {\r\n  return (\r\n    <Center\r\n      w={[\"150px\", \"150px\", \"5px\"]}\r\n      height={[\"21px\", \"21px\", \"50px\"]}\r\n      alignSelf=\"center\"\r\n    >\r\n      <Divider\r\n        orientation={useBreakpointValue([\r\n          \"horizontal\",\r\n          \"horizontal\",\r\n          \"vertical\",\r\n        ])}\r\n      />\r\n    </Center>\r\n  );\r\n};\r\n\r\nexport default MainBlock2Divider;\r\n","import React from 'react'\r\n\r\nimport MainBlock1Card from '../MainBlock1Card'\r\n\r\nconst GraphEvolutionOfTreasuriesStacked = (props) => {\r\n  return (\r\n    <MainBlock1Card minHeight=\"345px\" flexGrow={1}>\r\n      Chart 1 evolution\r\n    </MainBlock1Card>\r\n  )\r\n}\r\n\r\nexport default GraphEvolutionOfTreasuriesStacked\r\n","import React from 'react'\r\n\r\nimport MainBlock1Card from '../MainBlock1Card'\r\n\r\nconst GraphTreasuryAllocationDonut = (props) => {\r\n  return (\r\n    <MainBlock1Card minHeight=\"345px\" minWidth={['320px', '356px', '356px']}>\r\n      Chart 2 donut\r\n    </MainBlock1Card>\r\n  )\r\n}\r\n\r\nexport default GraphTreasuryAllocationDonut\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MainBlock1Card from \"components/1atomic/MainBlock1Card\";\r\n\r\nimport MainBlock2StatsText from \"components/1atomic/MainBlock2StatsText\";\r\n\r\nimport MainBlock2Divider from \"components/1atomic/MainBlock2Divider\";\r\nimport MainBlock3HeaderText from \"components/1atomic/MainBlock3HeaderText\";\r\nimport { prettifytolocalstring, prettifyamounts } from \"resources/utilities\";\r\nimport GraphEvolutionOfTreasuriesStacked from 'components/1atomic/Graphs/GraphEvolutionOfTreasuriesStacked'\r\nimport GraphTreasuryAllocationDonut from 'components/1atomic/Graphs/GraphTreasuryAllocationDonut'\r\nimport {Flex, Box} from \"@chakra-ui/react\";\r\n\r\nconst DashboardPage = (props) => {\r\n  const { stats, localwalletstats } = props;\r\n\r\n  // console.log(useBreakpointValue([\"base\", \"sm screen\", \"large screen\"]));\r\n\r\n  return (\r\n    <>\r\n      <Flex\r\n        justifyContent=\"space-between\"\r\n        m={0}\r\n        p={0}\r\n        flexDirection={['column', 'column', 'row']}\r\n      >\r\n        <Flex flexDirection=\"column\" width=\"100%\">\r\n          <MainBlock1Card p=\"25px\" minHeight=\"111px\">\r\n            <MainBlock2StatsText\r\n              title=\"Circulating Supply ($SCEPTER)\"\r\n              value={prettifytolocalstring(stats.scepterCirculatingSupply)}\r\n            />\r\n            <MainBlock2Divider />\r\n            <MainBlock2StatsText\r\n              title=\"$SCEPTER Price\"\r\n              value={prettifyamounts(stats.scepterBackingPrice)}\r\n            />\r\n          </MainBlock1Card>\r\n          <MainBlock1Card minHeight=\"222px\" flexDirection=\"column\">\r\n            <Flex flexDirection={['column', 'column', 'row']}>\r\n              <MainBlock2StatsText\r\n                title=\"$SCEPTER Treasury Value\"\r\n                value={prettifyamounts(stats.scepterTreasuryValue)}\r\n              />\r\n              <MainBlock2StatsText\r\n                title=\"Risk Treasury Value\"\r\n                value={prettifyamounts(stats.riskTreasuryValue)}\r\n              />\r\n            </Flex>\r\n            <Flex flexDirection={['column', 'column', 'row']}>\r\n              <MainBlock2StatsText\r\n                title=\"Airdrops distributed (last 3 months)\"\r\n                value={prettifyamounts(stats.airdrops3Months)}\r\n              />\r\n              <MainBlock2StatsText\r\n                title=\"Baton treasury value\"\r\n                value={prettifyamounts(stats.batonTreasuryValue)}\r\n              />\r\n            </Flex>\r\n          </MainBlock1Card>\r\n        </Flex>\r\n        <MainBlock1Card\r\n          minHeight=\"345px\"\r\n          minWidth={['320px', '356px', '356px']}\r\n        >\r\n          Chart 1\r\n        </MainBlock1Card>\r\n      </Flex>\r\n      <MainBlock3HeaderText text=\"Account Overview\" />\r\n      <MainBlock1Card p=\"30px\">\r\n        <MainBlock2StatsText\r\n          title=\"Your SCEPTER Balance (Tokens)\"\r\n          value={prettifytolocalstring(localwalletstats.sceptertoken)}\r\n        />\r\n        <MainBlock2Divider />\r\n        <MainBlock2StatsText\r\n          title=\"Your SCEPTER Balance (Value)\"\r\n          value={prettifyamounts(\r\n            localwalletstats.sceptertoken * stats.scepterBackingPrice\r\n          )}\r\n        />\r\n        <MainBlock2Divider />\r\n        <MainBlock2StatsText\r\n          title=\"Number of BATON tokens\"\r\n          value={prettifytolocalstring(localwalletstats.batontoken)}\r\n        />\r\n      </MainBlock1Card>\r\n      <MainBlock3HeaderText text=\"Treasuries Overview\" />\r\n      <Flex flexDirection={['column', 'column', 'row']}>\r\n        <GraphEvolutionOfTreasuriesStacked />\r\n        <GraphTreasuryAllocationDonut />\r\n      </Flex>\r\n      <Flex\r\n        justifyContent=\"space-between\"\r\n        flexDirection={['column', 'column', 'row']}\r\n      >\r\n        <MainBlock1Card p=\"15px\" flexGrow={1}>\r\n          <MainBlock2StatsText\r\n            title=\"SCEPTER Price Growth since day 1 (USD)\"\r\n            value={prettifyamounts(localwalletstats.sceptertoken)}\r\n            align=\"left\"\r\n            growthDirection=\"positive\"\r\n            percentageValue=\"10.2\"\r\n          />\r\n        </MainBlock1Card>\r\n        <MainBlock1Card p=\"15px\" flexGrow={1}>\r\n          <MainBlock2StatsText\r\n            title=\"Airdrops to BATON holders (since day 1 (USD)\"\r\n            value={prettifyamounts(localwalletstats.sceptertoken)}\r\n            align=\"left\"\r\n            growthDirection=\"negative\"\r\n            percentageValue=\"10.2\"\r\n          />\r\n        </MainBlock1Card>\r\n        <MainBlock1Card p=\"15px\" flexGrow={1}>\r\n          <MainBlock2StatsText\r\n            title=\"RISK Treasury Growth since day 1\"\r\n            value={prettifyamounts(localwalletstats.sceptertoken)}\r\n            align=\"left\"\r\n            growthDirection=\"positive\"\r\n            percentageValue=\"1000.2\"\r\n          />\r\n        </MainBlock1Card>\r\n      </Flex>\r\n      <Box h=\"70px\" /* Only for spacing*/ />\r\n    </>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    stats: state.stats[0],\r\n    investmentList: state.investmentList[0],\r\n    localwalletstats: state.localwalletstats[0],\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(DashboardPage);\r\n"],"sourceRoot":""}